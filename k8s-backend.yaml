---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: fullstack-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: fullstack-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
            - containerPort: 5000
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@postgres:5432/demo
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: demo
            - name: MONGO_URL
              value: mongodb://mongo:27017/demo
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_URL
              value: redis://redis:6379
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "3000"
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 45
            periodSeconds: 30
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: fullstack-demo
spec:
  selector:
    app: backend
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
    - name: grpc
      protocol: TCP
      port: 5000
      targetPort: 5000
---
# Backend Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: fullstack-demo
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: fullstack-demo-secure-headers@kubernetescrd,fullstack-demo-cors@kubernetescrd,fullstack-demo-rate-limit@kubernetescrd
    traefik.ingress.kubernetes.io/router.priority: "300"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - api.localhost
  rules:
    - host: api.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 3000
    # Also handle API calls from main domain
    - host: localhost
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 3000
          - path: /graphql
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 3000
          - path: /socket.io
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 3000
